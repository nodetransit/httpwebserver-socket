#ifndef HTTPWEBSERVER_SOCKET_HPP_INTERFACE__
#define HTTPWEBSERVER_SOCKET_HPP_INTERFACE__

#cmakedefine HTTPWEBSERVER_LIB_EXPORT_SHARED
#cmakedefine HTTPWEBSERVER_LIB_EXPORT_STATIC
#cmakedefine LINUX
#cmakedefine LOSE
#cmakedefine BANANA

#ifdef HTTPWEBSERVER_SOCKET_LIB_EXPORT /* inside DLL, export functons */
#
#   ifdef _MSC_VER
#       define __HttpWebServerSocketPort__  __declspec(dllexport)
#   elif __GNUC__
#       define __HttpWebServerSocketPort__  __attribute__((visibility("default")))
#   else
#       define __HttpWebServerSocketPort__
#       pragma warning Unknown dynamic link export semantic.
#   endif
#
#elif !defined HTTPWEBSERVER_SOCKET_LIB_EXPORT /* compile as static */
#
#   ifdef _MSC_VER
#       define __HttpWebServerSocketPort__  __declspec(dllimport)
#   elif __GNUC__
#       define __HttpWebServerSocketPort__
#   else
#       define __HttpWebServerSocketPort__
#       pragma warning Unknown dynamic link import semantic.
#   endif
#
#endif /* HTTPWEBSERVER_SOCKET_LIB_EXPORT */

namespace nt { namespace http { namespace interfaces {

typedef void (* event_callback)(void*, void*);

class __HttpWebServerSocketPort__ Socket
{
public:
    Socket() = default;
    virtual ~Socket() noexcept = 0;

    virtual void bind(const char*, const unsigned short) = 0;
    virtual void listen(const unsigned int, event_callback) = 0;
    virtual void open() = 0;
    virtual void close() = 0;
};

}}}

#endif /* HTTPWEBSERVER_SOCKET_HPP_INTERFACE__ */

